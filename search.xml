<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>无题</title>
      <link href="/2025/06/24/%E6%96%87%E7%AB%A02/"/>
      <url>/2025/06/24/%E6%96%87%E7%AB%A02/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p>站在某个路口，忽然发现曾经清晰的坐标开始模糊。那些从小到大被标注好的节点，像是被雨水晕开的墨迹，渐渐失去了明确的轮廓。小时候总觉得人生该有清晰的进度条，到了某个时刻就该掌握特定的技能 —— 学会一种交通工具，背熟一本厚厚的书，奔赴一个遥远的目的地。可真到了这个阶段，却像面对一把没有刻度的尺子，不知道该在哪个位置做下标记。​<br>开始常常在 “想成为别人” 和 “只想做自己” 之间徘徊。看到他人在属于自己的舞台上闪耀，会不自觉地想靠近，仿佛能借到一丝光芒；可当独自静处时，又会猛然发觉，那些不属于自己的光环，怎么也无法真正契合。就像试穿一双并不合脚的鞋，穿着它行走总怕跌倒，可又舍不得它亮眼的款式。原来这个阶段最常见的矛盾，是既渴望融入周遭的人群，又害怕在人潮中失去独特的自己。​<br>对于 “以后” 这个词，心里总是既敬畏又烦躁。当被问及规划时，话语像被什么东西卡住，难以形成完整的句子。那些常被提及的职业选择、生活地点、日子的模样，听起来就像别人写好的剧本，自己握着笔，却迟迟不敢写下属于自己的内容。并非没有想法，而是想法太多，像春天里疯长的藤蔓，缠绕在一起，让人看不清主干究竟在何处。​<br>突然明白，“告别” 是这段时光里一门必修的课程。它并非都是轰轰烈烈的相拥而别，更多的是悄无声息的疏远。曾经朝夕相处的人，渐渐在不同的岔路口走向了不同的方向，聊天记录停留在 “有空再聚”，可始终凑不齐合适的时间。不是彼此的关系变淡了，而是各自的生活轨迹开始出现夹角，夹角里既有新的相遇，也留存着旧日的惦念。​<br>常常在深夜与自己对话。关掉外界的纷扰，才能听见内心的声音 —— 原来并没有那么渴望活成别人口中的 “优秀”，也没有那么畏惧成为世俗意义上的 “普通”。那些刻意隐藏的迷茫，那些难以言说的焦虑，在同阶段的人心中，其实都能找到相似的影子。就像月亮倒映在不同的水面，都能映出相近的清辉。​<br>开始懂得，所谓成长，并非变得无坚不摧，而是学会带着脆弱继续前行。会在被否定时悄悄红了眼眶，却依然在第二天早起为目标努力；会在深夜因对未来的担忧而辗转难眠，天亮后依旧挤上早高峰的车。不再觉得脆弱是件丢人的事，就像春天总会下雨，夏天难免有雷暴，情绪有起伏本就是常态。​<br>这个阶段最奇妙的地方，在于还拥有 “试错” 的勇气。知道走错了路可以回头，爱错了人可以转身，选错了方向可以重新定位。就像刚学走路的孩子，摇摇晃晃却眼神明亮，不害怕摔倒，因为清楚自己有足够的力气重新站起来。​<br>这段时光就像一幅未完成的拼图，我们都在摸索中寻找相匹配的碎片。不必急于拼凑出完整的画面，那些暂时错位的空缺，或许正是光照进来的地方。​</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>单一架构-html-css-JavaScript</title>
      <link href="/2025/06/23/%E6%96%87%E7%AB%A01/"/>
      <url>/2025/06/23/%E6%96%87%E7%AB%A01/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><h1 id="第一节-单一架构"><a href="#第一节-单一架构" class="headerlink" title="第一节 单一架构"></a>第一节 单一架构</h1><p>我们从现在的JavaWeb阶段到后面学习SSM(Spring MVC Spring MyBatis)框架阶段都是在学习单一架构项目开发的技术。</p><p>而在JavaWeb阶段由于重点是探讨如何实现Web开发，所以必须学习一部分前端开发的技术。</p><h2 id="1、单一架构技术体系"><a href="#1、单一架构技术体系" class="headerlink" title="1、单一架构技术体系"></a>1、单一架构技术体系</h2><ul><li><p>视图：用户的操作界面+数据的动态显示</p><ul><li>前端技术：HTML&#x2F;CSS&#x2F;JavaScript&#x2F;jQuery</li><li>服务器端页面模板技术：Thymeleaf</li></ul></li><li><p>控制层：处理请求+跳转页面</p><ul><li>服务器：Tomcat</li><li>控制器：Servlet(处理单个请求)</li><li>jsp内置对象：page、request、session、application</li><li>过滤器：Filter(处理字符串乱码,权限)</li><li>监听器：Listener(会员\游客人数)</li><li>异步交互：Ajax(局部更新页面)</li></ul></li><li><p>业务逻辑层：业务逻辑计算</p></li><li><p>持久化层：操作数据库</p></li></ul><h2 id="2、视图层"><a href="#2、视图层" class="headerlink" title="2、视图层"></a>2、视图层</h2><p>严格来说视图分成两层：</p><ul><li>前端技术：HTML&#x2F;CSS&#x2F;JavaScript&#x2F;jQuery&#x2F;Vue</li><li>服务器端页面模板技术：Thymeleaf</li></ul><p>其中HTML、CSS、JavaScript、jQuery都是工作在浏览器上的，所以它们都属于前端技术。</p><p>而Thymeleaf是在服务器上把动态内容计算出具体数据，所以严格来说Thymeleaf是后端技术。</p><blockquote><p>这里大家会有个疑问：为什么在『视图』这个地方已经有HTML、CSS、JavaScript、jQuery这些前端技术了，能够生成用户可以操作的界面，那为什么还需要Thymeleaf这样一个后端技术呢？</p><p>简单来说原因是Thymeleaf&#x3D;HTML+动态数据，而HTML不支持动态数据，这部分需要借助Thymeleaf来完成。</p><p>更进一步的细节咱们讲到那再说啦！</p></blockquote><h2 id="3、Web2-0"><a href="#3、Web2-0" class="headerlink" title="3、Web2.0"></a>3、Web2.0</h2><p>Web2.0是相对于更早的网页开发规范而提出的新规范。Web2.0规范之前的网页开发并没有明确的将HTML、CSS、JavaScript代码分开，而是互相之间纠缠在一起，导致代码维护困难，开发效率很低。</p><blockquote><p>在开发中我们把这样彼此纠缠、互相影响的现象称为『耦合』。而把耦合在一起的东西拆解开，让他们彼此独立出来称为『解耦』。各个组成部分独立完成自己负责的功能，和其他模块无关称为『内聚』。</p><p>将来大家经常会听到一句话：软件开发提倡『 高内聚，低耦合』。</p><p>一个软件项目只有做到了高内聚、低耦合才能算得上结构严谨，模块化程度高，有利于开发和维护。</p></blockquote><p>所以Web2.0规范主张将网页代码分成下面三个部分：</p><ul><li>结构：由HTML实现，负责管理网页的内容。将来网页上不管是静态还是动态的数据都是填写到HTML的标签里。</li><li>表现：由CSS实现，负责管理网页内容的表现形式。比如：颜色、尺寸、位置、层级等等。也就是给数据穿上一身漂亮的衣服。</li><li>行为：由JavaScript实现，负责实现网页的动态交互效果。比如：轮播图、表单验证、鼠标滑过显示下拉菜单、鼠标滑过改变背景颜色等等。</li></ul><h1 id="第二节-html简单回顾"><a href="#第二节-html简单回顾" class="headerlink" title="第二节 html简单回顾"></a>第二节 html简单回顾</h1><p>有序列表,无序列表,h,p,img,form表单</p><p><a href="https://www.runoob.com/html/html-tutorial.html">https://www.runoob.com/html/html-tutorial.html</a></p><p>超文本标记语言（英语：HyperText Markup Language，简称：HTML）是一种用于创建网页的标准标记语言。</p><p>您可以使用 HTML 来建立自己的 WEB 站点，HTML 运行在浏览器上，由浏览器来解析。</p><p>在本教程中，您将学习如何使用 HTML 来创建站点。</p><p>HTML 很容易学习！相信您能很快学会它！</p><p><a href="https://www.runoob.com/html/html5-intro.html">https://www.runoob.com/html/html5-intro.html</a></p><p>HTML5是HTML最新的修订版本，2014年10月由万维网联盟（W3C）完成标准制定。</p><p>HTML5的设计目的是为了在移动设备上支持多媒体,HTML5 简单易学。</p><p>HTML5 &lt;!DOCTYPE&gt;</p><!doctype><p> 声明必须位于 HTML5 文档中的第一行,使用非常简单:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br></pre></td></tr></table></figure><p>FLASH，即Adobe Flash Player，被HTML5取代了。</p><p>自2017年Adobe宣布在2020年末放弃对Flash的更新与维护以来，Flash被各大厂商“抛弃”的消息就越来越多。微软在2019年宣布计划从所有的浏览器中移除Flash，苹果也宣布将在2020年早些时候从自家浏览器中移除Flash。2020年12月31日之后，Adobe不再支持Flash Player，这意味着Flash Player已经正式退出历史舞台。</p><p>在被众多主流平台排除在外后，HTML5逐渐取代了Flash在网页动画、视频和交互效果方面的地位。HTML5不仅支持更丰富的多媒体内容，还具有更好的安全性和性能，成为现代网页设计的首选技术。因此，可以说FLASH被HTML5取代了。</p><h1 id="第三节-CSS简单回顾"><a href="#第三节-CSS简单回顾" class="headerlink" title="第三节 CSS简单回顾"></a>第三节 CSS简单回顾</h1><p><a href="https://www.runoob.com/css/css-tutorial.html">https://www.runoob.com/css/css-tutorial.html</a></p><p><strong>CSS</strong> (Cascading Style Sheets，层叠样式表），是一种用来为结构化文档（如 HTML 文档或 XML 应用）添加样式（字体、间距和颜色等）的计算机语言，<strong>CSS</strong> 文件扩展名为 <strong>.css</strong>。</p><p>通过使用 <strong>CSS</strong> 我们可以大大提升网页开发的工作效率！</p><p>在我们的 <strong>CSS</strong> 教程中，您会学到如何使用 CSS 同时控制多重网页的样式和布局。</p><p><strong>CSS3</strong> 现在已被大部分现代浏览器支持，而下一版的 <strong>CSS4</strong> 仍在开发中。</p><p><a href="https://www.runoob.com/css3/css3-tutorial.html">https://www.runoob.com/css3/css3-tutorial.html</a></p><p>CSS 用于控制网页的样式和布局。</p><p>CSS3 是最新的 CSS 标准。</p><p>本教程向您讲解 CSS3 中的新特性。</p><h1 id="第四节-JavaScript基本语法-重要"><a href="#第四节-JavaScript基本语法-重要" class="headerlink" title="第四节 JavaScript基本语法(重要)"></a>第四节 JavaScript基本语法(重要)</h1><h2 id="1、JavaScript代码嵌入方式"><a href="#1、JavaScript代码嵌入方式" class="headerlink" title="1、JavaScript代码嵌入方式"></a>1、JavaScript代码嵌入方式</h2><h3 id="①HTML文档内"><a href="#①HTML文档内" class="headerlink" title="①HTML文档内"></a>①HTML文档内</h3><ul><li>JavaScript代码要写在script标签内</li><li>script标签可以写在文档内的任意位置</li><li>为了能够方便查询或操作HTML标签（元素）script标签可以写在body标签后面</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 在HTML代码中定义一个按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;helloBtn&quot;</span>&gt;</span>SayHello<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 在script标签中编写JavaScript代码 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// document对象代表整个HTML文档</span></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// document对象调用getElementById()方法表示根据id查找对应的元素对象</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> btnElement = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;helloBtn&quot;</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 给按钮元素对象绑定单击响应函数</span></span></span><br><span class="line"><span class="language-javascript">btnElement.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 弹出警告框</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&quot;hello&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">&#125;;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="②引入外部JavaScript文档"><a href="#②引入外部JavaScript文档" class="headerlink" title="②引入外部JavaScript文档"></a>②引入外部JavaScript文档</h3><p>在script标签内通过src属性指定外部xxx.js文件的路径即可。但是要注意以下两点：</p><ul><li>引用外部JavaScript文件的script标签里面不能写JavaScript代码</li><li>先引入，再使用</li><li>script标签不能写成单标签</li></ul><p>引入方式如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 使用script标签的src属性引用外部JavaScript文件，和Java中的import语句类似 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引用外部JavaScript文件的script标签里面不能写JavaScript代码 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引用外部JavaScript文件的script标签不能改成单标签 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 外部JavaScript文件一定要先引入再使用 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;scripts/outter.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 调用外部JavaScript文件中声明的方法</span></span></span><br><span class="line"><span class="language-javascript"><span class="title function_">showMessage</span>();</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、声明和使用变量"><a href="#2、声明和使用变量" class="headerlink" title="2、声明和使用变量"></a>2、声明和使用变量</h2><h3 id="①JavaScript数据类型"><a href="#①JavaScript数据类型" class="headerlink" title="①JavaScript数据类型"></a>①JavaScript数据类型</h3><ul><li><p>基本数据类型</p><ul><li><p>数值型：JavaScript不区分整数、小数</p></li><li><p>字符串：JavaScript不区分字符、字符串；单引号、双引号意思一样。</p></li><li><p>布尔型：true、false</p><p>在JavaScript中，其他类型和布尔类型的自动转换。</p><p><strong>true：非零的数值，非空字符串，非空对象</strong></p><p><strong>false：零，空字符串，null，undefined</strong></p><p>例如：”false”放在if判断中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// &quot;false&quot;是一个非空字符串，直接放在if判断中会被当作『真』处理</span></span><br><span class="line"><span class="keyword">if</span>(<span class="string">&quot;false&quot;</span>)&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;true&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;false&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>引用类型</p><ul><li>所有new出来的对象</li><li>用[]声明的数组</li><li>用{}声明的对象(json)</li></ul></li></ul><h3 id="②变量"><a href="#②变量" class="headerlink" title="②变量"></a>②变量</h3><ul><li><p>关键字：var</p></li><li><p>数据类型：JavaScript变量可以接收任意类型的数据</p></li><li><p>标识符：严格区分大小写</p></li><li><p>变量使用规则</p><ul><li><p><strong>如果使用了一个没有声明的变量，那么会在运行时报错</strong></p><p><strong>Uncaught ReferenceError: b is not defined</strong></p></li><li><p><strong>如果声明一个变量没有初始化，那么这个变量的值就是undefined</strong></p></li></ul></li></ul><h2 id="3、函数"><a href="#3、函数" class="headerlink" title="3、函数"></a>3、函数</h2><h3 id="①内置函数"><a href="#①内置函数" class="headerlink" title="①内置函数"></a>①内置函数</h3><p>内置函数：系统已经声明好了可以直接使用的函数。</p><h4 id="1-弹出警告框"><a href="#1-弹出警告框" class="headerlink" title="[1]弹出警告框"></a>[1]弹出警告框</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;警告框内容&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="2-弹出确认框"><a href="#2-弹出确认框" class="headerlink" title="[2]弹出确认框"></a>[2]弹出确认框</h4><p>用户点击『确定』返回true，点击『取消』返回false</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> result = <span class="title function_">confirm</span>(<span class="string">&quot;老板，你真的不加个钟吗？&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(result) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;老板点了确定，表示要加钟&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;老板点了确定，表示不加钟&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-在控制台打印日志"><a href="#3-在控制台打印日志" class="headerlink" title="[3]在控制台打印日志"></a>[3]在控制台打印日志</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;日志内容&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="②声明函数"><a href="#②声明函数" class="headerlink" title="②声明函数"></a>②声明函数</h3><p>写法1：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写法2：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> total = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">return</span> a+b;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>写法2可以这样解读：</p><p>声明一个函数，相当于创建了一个『函数对象』，将这个对象的『引用』赋值给变量total。</p><p>最后加的分号不是给函数声明加的，而是给整体的赋值语句加的分号。</p><h3 id="③调用函数"><a href="#③调用函数" class="headerlink" title="③调用函数"></a>③调用函数</h3><p>JavaScript中函数本身就是一种对象，函数名就是这个<span style="color:blue;font-weight:bold;">『对象』</span>的<span style="color:blue;font-weight:bold;">『引用』</span>。而调用函数的格式是：<span style="color:blue;font-weight:bold;">函数引用()</span>。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> result = <span class="title function_">sum</span>(<span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;result=&quot;</span>+result);</span><br></pre></td></tr></table></figure><p>或：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> total = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> totalResult = <span class="title function_">total</span>(<span class="number">3</span>,<span class="number">6</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;totalResult=&quot;</span>+totalResult);</span><br></pre></td></tr></table></figure><h2 id="4、对象"><a href="#4、对象" class="headerlink" title="4、对象"></a>4、对象</h2><p>JavaScript中没有『类』的概念，对于系统内置的对象可以直接创建使用。</p><h3 id="①使用new关键字创建对象"><a href="#①使用new关键字创建对象" class="headerlink" title="①使用new关键字创建对象"></a>①使用new关键字创建对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建对象</span></span><br><span class="line"><span class="keyword">var</span> obj01 = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给对象设置属性和属性值</span></span><br><span class="line">obj01.<span class="property">stuName</span> = <span class="string">&quot;tom&quot;</span>;</span><br><span class="line">obj01.<span class="property">stuAge</span> = <span class="number">20</span>;</span><br><span class="line">obj01.<span class="property">stuSubject</span> = <span class="string">&quot;java&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在控制台输出对象</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj01);</span><br></pre></td></tr></table></figure><h3 id="②使用-创建对象"><a href="#②使用-创建对象" class="headerlink" title="②使用{}创建对象"></a>②使用{}创建对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建对象</span></span><br><span class="line"><span class="keyword">var</span> obj02 = &#123;</span><br><span class="line"><span class="string">&quot;soldierName&quot;</span>:<span class="string">&quot;john&quot;</span>,</span><br><span class="line"><span class="string">&quot;soldierAge&quot;</span>:<span class="number">35</span>,</span><br><span class="line"><span class="string">&quot;soldierWeapon&quot;</span>:<span class="string">&quot;gun&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在控制台输出对象</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj02);</span><br></pre></td></tr></table></figure><h3 id="③给对象设置函数属性"><a href="#③给对象设置函数属性" class="headerlink" title="③给对象设置函数属性"></a>③给对象设置函数属性</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建对象</span></span><br><span class="line"><span class="keyword">var</span> obj01 = <span class="keyword">new</span> <span class="title class_">Object</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 给对象设置属性和属性值</span></span><br><span class="line">obj01.<span class="property">stuName</span> = <span class="string">&quot;tom&quot;</span>;</span><br><span class="line">obj01.<span class="property">stuAge</span> = <span class="number">20</span>;</span><br><span class="line">obj01.<span class="property">stuSubject</span> = <span class="string">&quot;java&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加任意的方法(函数)</span></span><br><span class="line">obj01.<span class="property">study</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">stuName</span> + <span class="string">&quot; is studying&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在控制台输出对象</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj01);</span><br><span class="line"><span class="comment">// 调用函数</span></span><br><span class="line">obj01.<span class="title function_">study</span>();</span><br></pre></td></tr></table></figure><p>或：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建对象</span></span><br><span class="line"><span class="keyword">var</span> obj02 = &#123;</span><br><span class="line"><span class="string">&quot;soldierName&quot;</span>:<span class="string">&quot;john&quot;</span>,</span><br><span class="line"><span class="string">&quot;soldierAge&quot;</span>:<span class="number">35</span>,</span><br><span class="line"><span class="string">&quot;soldierWeapon&quot;</span>:<span class="string">&quot;gun&quot;</span>,</span><br><span class="line"><span class="string">&quot;soldierShoot&quot;</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">soldierName</span> + <span class="string">&quot; is using &quot;</span> + <span class="variable language_">this</span>.<span class="property">soldierWeapon</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在控制台输出对象</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj02);</span><br><span class="line"><span class="comment">// 调用函数</span></span><br><span class="line">obj02.<span class="title function_">soldierShoot</span>();</span><br></pre></td></tr></table></figure><h3 id="④this关键字"><a href="#④this关键字" class="headerlink" title="④this关键字"></a>④this关键字</h3><p>this关键字只有两种情况：</p><ul><li><strong>在函数外面：this关键字指向window对象（代表当前浏览器窗口）</strong></li><li><strong>在函数里面：this关键字指向调用函数的对象</strong></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 直接打印this</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 函数中的this</span></span><br><span class="line"><span class="comment">// 1.声明函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getName</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.创建对象</span></span><br><span class="line"><span class="keyword">var</span> obj01 = &#123;</span><br><span class="line"><span class="string">&quot;name&quot;</span>:<span class="string">&quot;tom&quot;</span>,</span><br><span class="line"><span class="string">&quot;getName&quot;</span>:getName</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> obj02 = &#123;</span><br><span class="line"><span class="string">&quot;name&quot;</span>:<span class="string">&quot;jerry&quot;</span>,</span><br><span class="line"><span class="string">&quot;getName&quot;</span>:getName</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.调用函数</span></span><br><span class="line">obj01.<span class="title function_">getName</span>();</span><br><span class="line">obj02.<span class="title function_">getName</span>();</span><br></pre></td></tr></table></figure><h2 id="5、数组"><a href="#5、数组" class="headerlink" title="5、数组"></a>5、数组</h2><h3 id="①使用new关键字创建数组"><a href="#①使用new关键字创建数组" class="headerlink" title="①使用new关键字创建数组"></a>①使用new关键字创建数组</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1.创建数组对象</span></span><br><span class="line"><span class="keyword">var</span> arr01 = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.压入数据</span></span><br><span class="line">arr01.<span class="title function_">push</span>(<span class="string">&quot;apple&quot;</span>);</span><br><span class="line">arr01.<span class="title function_">push</span>(<span class="string">&quot;orange&quot;</span>);</span><br><span class="line">arr01.<span class="title function_">push</span>(<span class="string">&quot;banana&quot;</span>);</span><br><span class="line">arr01.<span class="title function_">push</span>(<span class="string">&quot;grape&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3.遍历数组</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr01.<span class="property">length</span>; i++) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr01[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4.数组元素反序</span></span><br><span class="line">arr01.<span class="title function_">reverse</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr01.<span class="property">length</span>; i++) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr01[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5.数组元素拼接成字符串</span></span><br><span class="line"><span class="keyword">var</span> arrStr = arr01.<span class="title function_">join</span>(<span class="string">&quot;,&quot;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arrStr);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 6.字符串拆分成数组</span></span><br><span class="line"><span class="keyword">var</span> arr02 = arrStr.<span class="title function_">split</span>(<span class="string">&quot;,&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr02.<span class="property">length</span>; i++) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr02[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 7.弹出数组中最后一个元素</span></span><br><span class="line"><span class="keyword">var</span> ele = arr01.<span class="title function_">pop</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(ele);</span><br></pre></td></tr></table></figure><h3 id="②使用-创建数组"><a href="#②使用-创建数组" class="headerlink" title="②使用[]创建数组"></a>②使用[]创建数组</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 8.使用[]创建数组</span></span><br><span class="line"><span class="keyword">var</span> arr03 = [<span class="string">&quot;cat&quot;</span>,<span class="string">&quot;dog&quot;</span>,<span class="string">&quot;tiger&quot;</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr03);</span><br></pre></td></tr></table></figure><h2 id="6、JSON"><a href="#6、JSON" class="headerlink" title="6、JSON"></a>6、JSON</h2><h3 id="①JSON格式的用途"><a href="#①JSON格式的用途" class="headerlink" title="①JSON格式的用途"></a>①JSON格式的用途</h3><p>在开发中凡是涉及到<span style="color:blue;font-weight:bold;">『跨平台数据传输』</span>，JSON格式一定是首选。</p><h3 id="②JSON格式的说明"><a href="#②JSON格式的说明" class="headerlink" title="②JSON格式的说明"></a>②JSON格式的说明</h3><ul><li>JSON数据两端要么是<span style="color:blue;font-weight:bold;">{}</span>，要么是<span style="color:blue;font-weight:bold;">[]</span></li><li><span style="color:blue;font-weight:bold;">{}</span>定义JSON对象</li><li><span style="color:blue;font-weight:bold;">[]</span>定义JSON数组</li><li>JSON对象的格式是：</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span>key<span class="punctuation">:</span>value<span class="punctuation">,</span>key<span class="punctuation">:</span>value<span class="punctuation">,</span>...<span class="punctuation">,</span>key<span class="punctuation">:</span>value<span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ul><li>JOSN数组的格式是：</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span>value<span class="punctuation">,</span>value<span class="punctuation">,</span>...<span class="punctuation">,</span>value<span class="punctuation">]</span></span><br></pre></td></tr></table></figure><ul><li>key的类型固定是字符串</li><li>value的类型可以是：<ul><li>基本数据类型</li><li>引用类型：JSON对象或JSON数组</li></ul></li></ul><p>正因为JSON格式中value部分还可以继续使用JSON对象或JSON数组，所以JSON格式是可以<span style="color:blue;font-weight:bold;">『多层嵌套』</span>的，所以JSON格式不论多么复杂的数据类型都可以表达。</p><p><strong>只要是key必须使用双引号,值非数字都要添加双引号</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;stuId&quot;</span><span class="punctuation">:</span><span class="number">556</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;stuName&quot;</span><span class="punctuation">:</span><span class="string">&quot;carl&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;school&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;schoolId&quot;</span><span class="punctuation">:</span><span class="number">339</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;schoolName&quot;</span><span class="punctuation">:</span><span class="string">&quot;edu&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;subjectList&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;subjectName&quot;</span><span class="punctuation">:</span><span class="string">&quot;java&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;subjectScore&quot;</span><span class="punctuation">:</span><span class="number">50</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;subjectName&quot;</span><span class="punctuation">:</span><span class="string">&quot;PHP&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;subjectScore&quot;</span><span class="punctuation">:</span><span class="number">35</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;subjectName&quot;</span><span class="punctuation">:</span><span class="string">&quot;python&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;subjectScore&quot;</span><span class="punctuation">:</span><span class="number">24</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;teacherMap&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;aaa&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;teacherName&quot;</span><span class="punctuation">:</span><span class="string">&quot;zhangsan&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;teacherAge&quot;</span><span class="punctuation">:</span><span class="number">20</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;bbb&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;teacherName&quot;</span><span class="punctuation">:</span><span class="string">&quot;zhangsanfeng&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;teacherAge&quot;</span><span class="punctuation">:</span><span class="number">108</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;ccc&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;teacherName&quot;</span><span class="punctuation">:</span><span class="string">&quot;zhangwuji&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;teacherAge&quot;</span><span class="punctuation">:</span><span class="number">25</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="③JSON对象和JSON字符串互转"><a href="#③JSON对象和JSON字符串互转" class="headerlink" title="③JSON对象和JSON字符串互转"></a>③JSON对象和JSON字符串互转</h3><h4 id="1-JSON对象转JSON字符串"><a href="#1-JSON对象转JSON字符串" class="headerlink" title="[1]JSON对象转JSON字符串"></a>[1]JSON对象转JSON字符串</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> jsonObj = &#123;<span class="string">&quot;stuName&quot;</span>:<span class="string">&quot;tom&quot;</span>,<span class="string">&quot;stuAge&quot;</span>:<span class="number">20</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> jsonStr = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(jsonObj);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> jsonObj); <span class="comment">// object</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> jsonStr); <span class="comment">// string</span></span><br></pre></td></tr></table></figure><h4 id="2-JSON字符串转JSON对象"><a href="#2-JSON字符串转JSON对象" class="headerlink" title="[2]JSON字符串转JSON对象"></a>[2]JSON字符串转JSON对象</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">jsonObj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(jsonStr);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(jsonObj); <span class="comment">// &#123;stuName: &quot;tom&quot;, stuAge: 20&#125;</span></span><br></pre></td></tr></table></figure><h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p>理解单一架构技术体系</p><p>掌握JavaScript的常用用法</p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/cinema/index.html"/>
      <url>/cinema/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>链接</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {    background: transparent !important;}#page-header {    background: transparent !important;}/* 白天模式遮罩透明 */#footer::before {    background: transparent !important;}#page-header::before {    background: transparent !important;} /* 夜问模式遮罩透明 */[data-theme="dark"] #footer::before {    background: transparent !important; }[data-theme="dark"] #page-header::before {    background: transparent !important;}#nav .menus_items {    position: absolute;    width: fit-content;    left: 50%;    transform: translateX(-50%);}#nav .menus_items .menus_item:hover .menus_item_child{    display: flex;  }/* 这里的2是代表导航栏的第二个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(2) .menus_item_child {    left: -35px;}/* 这里的3是代表导航栏的第三个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(3) .menus_item_child {    left: -135px;}/* 全局默认鼠标指针 */body,html{  cursor: url('https://npm.elemecdn.com/akilar-candyassets/image/cur/arrow.cur'),auto !important;}/* 悬停图片时的鼠标指针 */img{  cursor: url('https://npm.elemecdn.com/akilar-candyassets/image/cur/btn.cur'),auto !important;}/* 选择链接标签时的鼠标指针 */a:hover{    cursor: url('https://npm.elemecdn.com/akilar-candyassets/image/cur/link.cur'),auto;}/* 选中输入框时的鼠标指针 */input:hover{    cursor: url('https://npm.elemecdn.com/akilar-candyassets/image/cur/input.cur'),auto;}/* 悬停按钮时的鼠标指针 */button:hover{    cursor: url('https://npm.elemecdn.com/akilar-candyassets/image/cur/btn.cur'),auto;}/* 悬停列表标签时的鼠标指针 */i:hover{    cursor: url('https://npm.elemecdn.com/akilar-candyassets/image/cur/link.cur'),auto;}/* 悬停页脚链接标签（例如页脚徽标）时的鼠标指针 */#footer-wrap a:hover{      cursor: url('https://npm.elemecdn.com/akilar-candyassets/image/cur/hf.cur'),auto;}/* 悬停页码时的鼠标指针 */#pagination .page-number:hover{      cursor: url('https://npm.elemecdn.com/akilar-candyassets/image/cur/i.cur'),auto;}/* 悬停菜单栏时的鼠标指针 */#nav .site-page:hover{      cursor: url('https://npm.elemecdn.com/akilar-candyassets/image/cur/hf.cur'),auto;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>我的歌单</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\css\APlayer.min.css"><script src="\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\js\Meting.min.js"></script><p><font color=#0c74d6 size=3 face="黑体"><strong>非常纯的纯音乐</strong></font></p>    <div id="aplayer-gDlTrxEk" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="7315923099" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div>]]></content>
      
    </entry>
    
    
  
</search>
